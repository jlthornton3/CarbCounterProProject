[debug] [2021-12-06T03:41:28.228Z] ----------------------------------------------------------------------
[debug] [2021-12-06T03:41:28.229Z] Command:       /usr/local/bin/node /usr/local/bin/firebase init
[debug] [2021-12-06T03:41:28.230Z] CLI Version:   9.23.0
[debug] [2021-12-06T03:41:28.230Z] Platform:      darwin
[debug] [2021-12-06T03:41:28.230Z] Node Version:  v16.13.1
[debug] [2021-12-06T03:41:28.230Z] Time:          Sun Dec 05 2021 17:41:28 GMT-1000 (Hawaii-Aleutian Standard Time)
[debug] [2021-12-06T03:41:28.230Z] ----------------------------------------------------------------------
[debug] 
[debug] [2021-12-06T03:41:28.233Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-12-06T03:41:28.233Z] > authorizing via signed-in user (jessicaleecox@gmail.com)
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  /Users/jessicathornton/Documents/Coding Projects/Mobile Web Development /CarbCounterPro

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2021-12-06T03:41:42.446Z] > refreshing access token with scopes: []
[debug] [2021-12-06T03:41:42.447Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2021-12-06T03:41:42.761Z] <<< HTTP RESPONSE 200 {"pragma":"no-cache","date":"Mon, 06 Dec 2021 03:41:42 GMT","cache-control":"no-cache, no-store, max-age=0, must-revalidate","expires":"Mon, 01 Jan 1990 00:00:00 GMT","content-type":"application/json; charset=utf-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","server":"scaffolding on HTTPServer2","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-12-06T03:41:42.815Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects pageSize=100
[debug] [2021-12-06T03:41:43.298Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects 200
[debug] [2021-12-06T03:41:43.298Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects [omitted]
[info] i  Using project carbcounterpro-54c5d (CarbCounterPro) 
[info] 
=== Database Setup
[info] i  database: ensuring required API firebasedatabase.googleapis.com is enabled... 
[debug] [2021-12-06T03:41:44.590Z] > refreshing access token with scopes: ["email","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","openid"]
[debug] [2021-12-06T03:41:44.590Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2021-12-06T03:41:44.846Z] <<< HTTP RESPONSE 200 {"pragma":"no-cache","date":"Mon, 06 Dec 2021 03:41:44 GMT","cache-control":"no-cache, no-store, max-age=0, must-revalidate","expires":"Mon, 01 Jan 1990 00:00:00 GMT","content-type":"application/json; charset=utf-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","server":"scaffolding on HTTPServer2","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-12-06T03:41:44.899Z] >>> HTTP REQUEST GET https://serviceusage.googleapis.com/v1/projects/carbcounterpro-54c5d/services/firebasedatabase.googleapis.com  
 
[debug] [2021-12-06T03:41:45.459Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 06 Dec 2021 03:41:45 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] ✔  database: required API firebasedatabase.googleapis.com is enabled 
[info] 
[debug] [2021-12-06T03:41:45.462Z] >>> HTTP REQUEST GET https://firebasedatabase.googleapis.com/v1beta/projects/carbcounterpro-54c5d/locations/-/instances/carbcounterpro-54c5d-default-rtdb  
 
[debug] [2021-12-06T03:41:46.167Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 06 Dec 2021 03:41:46 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firebase Realtime Database Security Rules allow you to define how your data should be
[info] structured and when your data can be read from and written to.
[info] 
[debug] [2021-12-06T03:41:52.977Z] >>> HTTP REQUEST GET https://carbcounterpro-54c5d-default-rtdb.firebaseio.com/.settings/rules.json  
 
[debug] [2021-12-06T03:41:53.416Z] <<< HTTP RESPONSE 200 {"server":"nginx","date":"Mon, 06 Dec 2021 03:41:53 GMT","content-type":"application/json; charset=utf-8","content-length":"161","connection":"keep-alive","access-control-allow-origin":"*","cache-control":"no-cache","strict-transport-security":"max-age=31556926; includeSubDomains; preload"}
[info] ✔  Database Rules for carbcounterpro-54c5d-default-rtdb have been written to database.rules.json. 
[info] Future modifications to database.rules.json will update Realtime Database Security Rules when you run
[info] firebase deploy.
[info] 
=== Firestore Setup
[debug] [2021-12-06T03:41:53.423Z] >>> HTTP REQUEST GET https://serviceusage.googleapis.com/v1/projects/carbcounterpro-54c5d/services/firestore.googleapis.com  
 
[debug] [2021-12-06T03:41:54.235Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 06 Dec 2021 03:41:54 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-12-06T03:41:54.237Z] >>> HTTP REQUEST GET https://appengine.googleapis.com/v1/apps/carbcounterpro-54c5d  
 
[debug] [2021-12-06T03:41:54.704Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 06 Dec 2021 03:41:54 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-12-06T03:41:54.705Z] database_type: CLOUD_FIRESTORE
[debug] [2021-12-06T03:41:54.706Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-12-06T03:41:54.706Z] > authorizing via signed-in user (jessicaleecox@gmail.com)
[debug] [2021-12-06T03:41:54.707Z] [iam] checking project carbcounterpro-54c5d for permissions ["firebase.projects.get"]
[debug] [2021-12-06T03:41:54.707Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/carbcounterpro-54c5d:testIamPermissions  
 {"permissions":["firebase.projects.get"]}
[debug] [2021-12-06T03:41:55.107Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 06 Dec 2021 03:41:55 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=186","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2021-12-06T03:41:59.400Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/carbcounterpro-54c5d/releases?pageSize=10&pageToken=  
 
[debug] [2021-12-06T03:42:00.016Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 06 Dec 2021 03:41:59 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-12-06T03:42:00.018Z] Found ruleset: projects/carbcounterpro-54c5d/rulesets/be96de9e-6490-4738-b925-032fa06a8c05
[debug] [2021-12-06T03:42:00.018Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/carbcounterpro-54c5d/rulesets/be96de9e-6490-4738-b925-032fa06a8c05  
 
[debug] [2021-12-06T03:42:00.543Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 06 Dec 2021 03:42:00 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-12-06T03:42:00.811Z] Error: EISDIR: illegal operation on a directory, open '/Users/jessicathornton/Documents/Coding Projects/Mobile Web Development /CarbCounterPro'
    at Object.openSync (node:fs:585:3)
    at Object.writeFileSync (node:fs:2153:35)
    at Object.createFileSync (/usr/local/lib/node_modules/firebase-tools/node_modules/fs-extra/lib/ensure/file.js:43:6)
    at Config.writeProjectFile (/usr/local/lib/node_modules/firebase-tools/lib/config.js:144:12)
    at /usr/local/lib/node_modules/firebase-tools/lib/init/features/firestore/rules.js:50:27
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at async Object.doSetup [as firestore] (/usr/local/lib/node_modules/firebase-tools/lib/init/features/firestore/index.js:35:5)
    at async init (/usr/local/lib/node_modules/firebase-tools/lib/init/index.js:19:9)
[error] 
[error] Error: An unexpected error has occurred.
[debug] [2021-12-06T03:42:03.732Z] ----------------------------------------------------------------------
[debug] [2021-12-06T03:42:03.733Z] Command:       /usr/local/bin/node /usr/local/bin/firebase init
[debug] [2021-12-06T03:42:03.733Z] CLI Version:   9.23.0
[debug] [2021-12-06T03:42:03.733Z] Platform:      darwin
[debug] [2021-12-06T03:42:03.733Z] Node Version:  v16.13.1
[debug] [2021-12-06T03:42:03.734Z] Time:          Sun Dec 05 2021 17:42:03 GMT-1000 (Hawaii-Aleutian Standard Time)
[debug] [2021-12-06T03:42:03.734Z] ----------------------------------------------------------------------
[debug] 
[debug] [2021-12-06T03:42:03.737Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-12-06T03:42:03.737Z] > authorizing via signed-in user (jessicaleecox@gmail.com)
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  /Users/jessicathornton/Documents/Coding Projects/Mobile Web Development /CarbCounterPro

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2021-12-06T03:42:10.886Z] > refreshing access token with scopes: []
[debug] [2021-12-06T03:42:10.887Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2021-12-06T03:42:11.164Z] <<< HTTP RESPONSE 200 {"cache-control":"no-cache, no-store, max-age=0, must-revalidate","expires":"Mon, 01 Jan 1990 00:00:00 GMT","date":"Mon, 06 Dec 2021 03:42:11 GMT","pragma":"no-cache","content-type":"application/json; charset=utf-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","server":"scaffolding on HTTPServer2","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-12-06T03:42:11.219Z] >>> [apiv2][query] GET https://firebase.googleapis.com/v1beta1/projects pageSize=100
[debug] [2021-12-06T03:42:11.667Z] <<< [apiv2][status] GET https://firebase.googleapis.com/v1beta1/projects 200
[debug] [2021-12-06T03:42:11.667Z] <<< [apiv2][body] GET https://firebase.googleapis.com/v1beta1/projects [omitted]
[info] i  Using project carbcounterpro-54c5d (CarbCounterPro) 
[info] 
=== Database Setup
[info] i  database: ensuring required API firebasedatabase.googleapis.com is enabled... 
[debug] [2021-12-06T03:42:12.599Z] > refreshing access token with scopes: ["email","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","openid"]
[debug] [2021-12-06T03:42:12.599Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2021-12-06T03:42:12.870Z] <<< HTTP RESPONSE 200 {"pragma":"no-cache","date":"Mon, 06 Dec 2021 03:42:12 GMT","cache-control":"no-cache, no-store, max-age=0, must-revalidate","expires":"Mon, 01 Jan 1990 00:00:00 GMT","content-type":"application/json; charset=utf-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","server":"scaffolding on HTTPServer2","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-12-06T03:42:12.922Z] >>> HTTP REQUEST GET https://serviceusage.googleapis.com/v1/projects/carbcounterpro-54c5d/services/firebasedatabase.googleapis.com  
 
[debug] [2021-12-06T03:42:13.489Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 06 Dec 2021 03:42:13 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] ✔  database: required API firebasedatabase.googleapis.com is enabled 
[info] 
[debug] [2021-12-06T03:42:13.493Z] >>> HTTP REQUEST GET https://firebasedatabase.googleapis.com/v1beta/projects/carbcounterpro-54c5d/locations/-/instances/carbcounterpro-54c5d-default-rtdb  
 
[debug] [2021-12-06T03:42:14.045Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 06 Dec 2021 03:42:14 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firebase Realtime Database Security Rules allow you to define how your data should be
[info] structured and when your data can be read from and written to.
[info] 
[debug] [2021-12-06T03:42:17.442Z] >>> HTTP REQUEST GET https://carbcounterpro-54c5d-default-rtdb.firebaseio.com/.settings/rules.json  
 
[debug] [2021-12-06T03:42:17.881Z] <<< HTTP RESPONSE 200 {"server":"nginx","date":"Mon, 06 Dec 2021 03:42:17 GMT","content-type":"application/json; charset=utf-8","content-length":"161","connection":"keep-alive","access-control-allow-origin":"*","cache-control":"no-cache","strict-transport-security":"max-age=31556926; includeSubDomains; preload"}
[info] ✔  Database Rules for carbcounterpro-54c5d-default-rtdb have been written to database.rules.json. 
[info] Future modifications to database.rules.json will update Realtime Database Security Rules when you run
[info] firebase deploy.
[info] 
=== Firestore Setup
[debug] [2021-12-06T03:42:17.888Z] >>> HTTP REQUEST GET https://serviceusage.googleapis.com/v1/projects/carbcounterpro-54c5d/services/firestore.googleapis.com  
 
[debug] [2021-12-06T03:42:18.504Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 06 Dec 2021 03:42:18 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-12-06T03:42:18.506Z] >>> HTTP REQUEST GET https://appengine.googleapis.com/v1/apps/carbcounterpro-54c5d  
 
[debug] [2021-12-06T03:42:19.150Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 06 Dec 2021 03:42:18 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-12-06T03:42:19.151Z] database_type: CLOUD_FIRESTORE
[debug] [2021-12-06T03:42:19.152Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-12-06T03:42:19.153Z] > authorizing via signed-in user (jessicaleecox@gmail.com)
[debug] [2021-12-06T03:42:19.153Z] [iam] checking project carbcounterpro-54c5d for permissions ["firebase.projects.get"]
[debug] [2021-12-06T03:42:19.154Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/carbcounterpro-54c5d:testIamPermissions  
 {"permissions":["firebase.projects.get"]}
[debug] [2021-12-06T03:42:19.561Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 06 Dec 2021 03:42:19 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=192","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2021-12-06T03:42:22.060Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/carbcounterpro-54c5d/releases?pageSize=10&pageToken=  
 
[debug] [2021-12-06T03:42:22.574Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 06 Dec 2021 03:42:22 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-12-06T03:42:22.575Z] Found ruleset: projects/carbcounterpro-54c5d/rulesets/be96de9e-6490-4738-b925-032fa06a8c05
[debug] [2021-12-06T03:42:22.576Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/carbcounterpro-54c5d/rulesets/be96de9e-6490-4738-b925-032fa06a8c05  
 
[debug] [2021-12-06T03:42:23.067Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 06 Dec 2021 03:42:23 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2021-12-06T03:42:25.414Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1/projects/carbcounterpro-54c5d/databases/(default)/collectionGroups/-/indexes  
 
[debug] [2021-12-06T03:42:25.415Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1/projects/carbcounterpro-54c5d/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false  
 
[debug] [2021-12-06T03:42:26.088Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 06 Dec 2021 03:42:26 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-12-06T03:42:26.096Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 06 Dec 2021 03:42:26 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] 
=== Functions Setup
[info] 
[info] A functions directory will be created in your project with sample code
[info] pre-configured. Functions can be deployed with firebase deploy.
[info] 
[debug] [2021-12-06T03:42:26.100Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2021-12-06T03:42:26.100Z] > authorizing via signed-in user (jessicaleecox@gmail.com)
[debug] [2021-12-06T03:42:26.100Z] [iam] checking project carbcounterpro-54c5d for permissions ["firebase.projects.get"]
[debug] [2021-12-06T03:42:26.100Z] >>> HTTP REQUEST POST https://cloudresourcemanager.googleapis.com/v1/projects/carbcounterpro-54c5d:testIamPermissions  
 {"permissions":["firebase.projects.get"]}
[debug] [2021-12-06T03:42:26.483Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 06 Dec 2021 03:42:26 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=180","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-12-06T03:42:26.486Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/carbcounterpro-54c5d/services/cloudfunctions.googleapis.com:enable  
 
[debug] [2021-12-06T03:42:26.487Z] >>> HTTP REQUEST POST https://serviceusage.googleapis.com/v1/projects/carbcounterpro-54c5d/services/runtimeconfig.googleapis.com:enable  
 
[debug] [2021-12-06T03:42:26.997Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 06 Dec 2021 03:42:27 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2021-12-06T03:42:27.012Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Mon, 06 Dec 2021 03:42:27 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] ✔  Wrote functions/package.json 
[info] ✔  Wrote functions/.eslintrc.js 
[info] ✔  Wrote functions/index.js 
[info] ✔  Wrote functions/.gitignore 
[info] 
=== Hosting Setup
[info] 
[info] Your public directory is the folder (relative to your project directory) that
[info] will contain Hosting assets to be uploaded with firebase deploy. If you
[info] have a build process for your assets, use your build's output directory.
[info] 
